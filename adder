half adder
module half_adder(a, b, sum, carry);
    input a, b;
    output sum, carry;
    xor x1(sum, a, b);   
    and a1(carry, a, b);
endmodule
`include "half_adder.v"
module half_adder_tb;
    reg a, b;
    wire sum, carry;
    half_adder ha1(a, b, sum, carry);
    initial begin
        $dumpfile("halfadder.vcd");
        $dumpvars(0, half_adder_tb);
        a = 0; b = 0;
        #10 a = 0; b = 1;
        #10 a = 1; b = 0;
        #10 a = 1; b = 1;
        #10 $finish;
    end
endmodule

full adder
module full_adder(a, b, c, carry, sum);
    input a, b, c;
    output carry, sum;
    wire f, e, d;

    xor x1(f, a, b);
    xor x2(sum, f, c);
    and a1(e, a, b);
    and a2(d, f, c);
    or  o1(carry, e, d);
endmodule
`include "full_adder.v"
module full_adder_tb;
    reg a, b, c;
    wire sum, carry;
    full_adder fa1(a, b, c, carry, sum);
    initial begin
        $dumpfile("fulladder.vcd");
        $dumpvars(0, full_adder_tb);
        a = 0; b = 0; c = 0;
        #10 a = 0; b = 0; c = 1;
        #10 a = 0; b = 1; c = 0;
        #10 a = 0; b = 1; c = 1;
        #10 a = 1; b = 0; c = 0;
        #10 a = 1; b = 0; c = 1;
        #10 a = 1; b = 1; c = 0;
        #10 a = 1; b = 1; c = 1;
        #10 $finish;
    end
endmodule
